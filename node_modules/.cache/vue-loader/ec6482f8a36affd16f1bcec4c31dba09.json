{"remainingRequest":"E:\\stockTransaction-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\stockTransaction-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\stockTransaction-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\stockTransaction-master\\src\\views\\cotent\\Newsend.vue?vue&type=template&id=b3d8a814&scoped=true&","dependencies":[{"path":"E:\\stockTransaction-master\\src\\views\\cotent\\Newsend.vue","mtime":1574479911780},{"path":"E:\\stockTransaction-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\stockTransaction-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\stockTransaction-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\stockTransaction-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}